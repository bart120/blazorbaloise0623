@page "/cars/add"
@using ServicesLibrary.Models;
@using ServicesLibrary.Services;

@inject BrandsService servBrands;
@inject CarsService servCars;


<h3>Ajouter une voiture</h3>

<EditForm OnValidSubmit="@submit" OnInvalidSubmit="@invalidSubmit" Model="@car" novalidate>
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Modèle</label>
        <div class="col-sm-10">
            <InputText class="form-control" @bind-Value="car.Model" />
            <ValidationMessage For="@(()=> car.Model)" class="over" />
        </div>
    </div>

    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Prix</label>
        <div class="col-sm-10">
            <InputNumber class="form-control" @bind-Value="car.Price" />
            <ValidationMessage For="@(()=> car.Price)" />
        </div>
    </div>

    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Modèle</label>
        <div class="col-sm-10">
            <InputDate class="form-control" @bind-Value="car.DateOfCirculation" />
            <ValidationMessage For="@(()=> car.DateOfCirculation)" />
        </div>
    </div>

    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Marque</label>
        <div class="col-sm-10">
            <InputSelect class="form-control form-select" @bind-Value="car.BrandID">
                <option value="" selected></option>
                @foreach (var brand in brands)
                {
                    <option value="@brand.ID">@brand.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="@(()=> car.BrandID)" />
        </div>
    </div>

    <div>
        <button type="submit" class="btn btn-primary">Enregistrer</button>
    </div>
</EditForm>

@code {
    private Car car = new Car { DateOfCirculation= DateTime.Now };
    private List<Brand> brands = new List<Brand>();

    protected override async Task OnInitializedAsync()
    {
        this.brands = await servBrands.getAllAsync();
        //this.car.BrandID = brands.FirstOrDefault().ID;
    }

    private async void submit()
    {
        Console.WriteLine(car.BrandID);
        /*var carReturn = await servCars.AddAsync(car);
        if(carReturn != null)
        {
            Console.WriteLine($"Voiture enregistrée avec l'ID {carReturn.ID}.");
        }
        else
        {
            Console.WriteLine("erreur post");
        }*/

    }

    private async Task invalidSubmit()
    {
        Console.WriteLine("erreur formulaire");
    }
}
